language: cpp
dist: trusty
osx_image: xcode7.3
compiler:
  - gcc
  - clang
os:
  - linux
  - osx
sudo: required


matrix:
  exclude:
    - os: osx
      compiler: gcc
    - os: linux
  include:
    - os: linux
      env: GCC_VERSION=5
      compiler: gcc
    - os: linux
      env: GCC_VERSION=6
      compiler: gcc

cache:
  directories:
  - ${HOME}/OpenCV

addons: &gcc5
  apt:
    packages:
      - g++-5
      - gcc-5
      - gcc-6
      - g++-6
      - libeigen3-dev 
      - libboost-all-dev
    sources:
      - ubuntu-toolchain-r-test
before_install:
  - if [ $TRAVIS_OS_NAME = "linux" ]; then
      mkdir -p include;
      curl -o include/catch.hpp https://raw.githubusercontent.com/philsquared/Catch/master/single_include/catch.hpp;
      sudo add-apt-repository ppa:kylelutz/compute -y;
      sudo apt-get update -q;
      sudo apt-get -y install boost-compute opencl-headers ocl-icd-opencl-dev libdc1394-22-dev libavcodec-dev libavformat-dev libswscale-dev libtheora-dev libvorbis-dev libxvidcore-dev libx264-dev yasm libopencore-amrnb-dev libopencore-amrwb-dev libv4l-dev libxine2-dev zlib1g-dev libjpeg-dev libwebp-dev libpng-dev libtiff5-dev libjasper-dev libopenexr-dev libgdal-dev qt5-default libvtk6-dev libtbb-dev libgtk-3-dev;
      sudo cp -r /usr/include/compute/boost/* /usr/include/boost;
      bash .travis/amd_sdk.sh;
      tar -xjf AMD-SDK.tar.bz2;
      AMDAPPSDK=${HOME}/AMDAPPSDK;
      export OPENCL_VENDOR_PATH=${AMDAPPSDK}/etc/OpenCL/vendors;
      mkdir -p ${OPENCL_VENDOR_PATH};
      sh AMD-APP-SDK*.sh --tar -xf -C ${AMDAPPSDK};
      echo libamdocl64.so > ${OPENCL_VENDOR_PATH}/amdocl64.icd;
      export LD_LIBRARY_PATH=${AMDAPPSDK}/lib/x86_64:${LD_LIBRARY_PATH};
      chmod +x ${AMDAPPSDK}/bin/x86_64/clinfo;
      ${AMDAPPSDK}/bin/x86_64/clinfo;
      sudo rm /usr/bin/g++;
      sudo ln -s /usr/bin/g++-5 /usr/bin/g++;
      sudo ln -s /usr/include/eigen3/Eigen /usr/include/Eigen;
      cd ${HOME};
      pwd;
      mkdir -p OpenCV;
      cd OpenCV;
      if [ ! -e "3.1.0.zip" ]; then
        wget https://github.com/Itseez/opencv/archive/3.1.0.zip;
      fi;
      if [ ! -e "opencv-3.1.0" ]; then
        unzip -q 3.1.0.zip;
      fi;
      cd opencv-3.1.0;
      cmake .;
      make -j4;
      sudo make install;
      cd ${HOME};
      wget -O ippicv_linux_20141027.tgz https://sourceforge.net/projects/opencvlibrary/files/3rdparty/ippicv/ippicv_linux_20141027.tgz;
      tar -xzvf ippicv_linux_20141027.tgz;
      sudo cp ippicv_lnx/lib/intel64/* /usr/lib;
      cd ${TRAVIS_BUILD_DIR};
      if [ $GCC_VERSION = 6 ]; then
        sudo rm /usr/bin/g++;
        sudo ln -s /usr/bin/g++-6 /usr/bin/g++;
      fi;
      export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/usr/local/lib;
    fi;

  - if [ $TRAVIS_OS_NAME = "osx" ]; then
      brew update;
      brew install eigen;
      brew install pkg-config;
      brew install boost;
      git clone https://github.com/boostorg/compute.git;
      sudo cp -r ./compute/include/boost/* /usr/local/include/boost;
      git clone https://github.com/philsquared/Catch.git;
      sudo cp ./Catch/single_include/catch.hpp /usr/local/include;
      xcode-select --install;
      cd ${HOME};
      pwd;
      mkdir -p OpenCV;
      cd OpenCV;
      wget https://github.com/Itseez/opencv/archive/3.1.0.zip;
      unzip -q 3.1.0.zip;
      cd opencv-3.1.0;
      cmake .;
      make -j4;
      make install;
      cd ${HOME};
      wget -O ippicv_macosx_20141027.tgz https://sourceforge.net/projects/opencvlibrary/files/3rdparty/ippicv/ippicv_macosx_20141027.tgz/download;
      tar -xzvf ippicv_macosx_20141027.tgz;
      cp ippicv_osx/lib/* /usr/local/lib/;
      cd ${TRAVIS_BUILD_DIR};
      sudo ln -s /usr/local/include/eigen3/Eigen /usr/local/include/Eigen;
    fi;
    
script:
  - cmake . -DUSE_ADDRESS_SANITIZER=0
  - make VERBOSE=1 -j4
